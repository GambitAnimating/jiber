import { sendToSocket } from './send-to-socket'

////////////////////////////////////////////////////////////////////////////////
// mocks
////////////////////////////////////////////////////////////////////////////////
let calls: any[]
const getState: any = () => {
  return {
    sockets: {
      socket1: {
        ws: {
          readyState: 1,
          OPEN: 1,
          send: (message: string) => calls.push(message)
        }
      }
    }
  }
}

////////////////////////////////////////////////////////////////////////////////
// setup
////////////////////////////////////////////////////////////////////////////////
beforeEach(() => calls = [])

////////////////////////////////////////////////////////////////////////////////
// tests
////////////////////////////////////////////////////////////////////////////////
test('send stringified action to a socket', () => {
  sendToSocket(getState, 'socket1', {type: 'test'})
  expect(calls).toEqual(['{"type":"test"}'])
})

test('ignore non-existant sockets', () => {
  sendToSocket(getState, 'socket2', {type: 'test'})
  expect(calls).toEqual([])
})
